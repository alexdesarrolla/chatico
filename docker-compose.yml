version: '3.8'

services:
  chatico:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatico-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - DATABASE_URL=file:./db/custom.db
      - Z_AI_API_KEY=${Z_AI_API_KEY}
      - Z_AI_API_URL=${Z_AI_API_URL}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
    volumes:
      - ./db:/app/db
      - ./logs:/app/logs
    networks:
      - chatico-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (opcional - para producci√≥n con dominio)
  nginx:
    image: nginx:alpine
    container_name: chatico-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - chatico
    networks:
      - chatico-network
    profiles:
      - with-nginx

  # Redis para cache (opcional - para mejor rendimiento)
  redis:
    image: redis:7-alpine
    container_name: chatico-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - chatico-network
    profiles:
      - with-redis

volumes:
  redis_data:

networks:
  chatico-network:
    driver: bridge